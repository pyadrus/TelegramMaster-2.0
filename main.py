# -*- coding: utf-8 -*-
import flet as ft
from loguru import logger

from src.core.checking_program import CheckingProgram
from src.core.configs import (PROGRAM_NAME, PROGRAM_VERSION, DATE_OF_PROGRAM_CHANGE, WINDOW_WIDTH,
                              WINDOW_HEIGHT, WINDOW_RESIZABLE, TIME_SENDING_MESSAGES_1, time_sending_messages_2,
                              time_changing_accounts_1, time_changing_accounts_2)
from src.core.sqlite_working_tools import create_database, open_and_read_data
from src.features.account.TGAccountBIO import AccountBIO
from src.features.account.TGChek import TGChek
from src.features.account.TGConnect import TGConnect
from src.features.account.TGContact import TGContact
from src.features.account.TGCreating import CreatingGroupsAndChats
from src.features.account.TGReactions import WorkingWithReactions
from src.features.account.TGSendingMessages import SendTelegramMessages
from src.features.account.TGViewingPosts import ViewingPosts
from src.features.account.inviting import InvitingToAGroup
from src.features.account.parsing.parsing import ParsingGroupMembers
from src.features.account.subscribe_unsubscribe.subscribe_unsubscribe import SubscribeUnsubscribeTelegram
from src.features.auth.logging_in import loging
from src.features.recording.receiving_and_recording import ReceivingAndRecording
from src.features.settings.setting import SettingPage, get_unique_filename, reaction_gui
from src.gui.gui import end_time, start_time
from src.gui.main_menu import main_menu_program
from src.gui.menu import bio_editing_menu, settings_menu, reactions_menu, viewing_posts_menu, working_with_contacts_menu
from src.gui.notification import show_notification

logger.add("user_data/log/log_ERROR.log", rotation="500 KB", compression="zip", level="ERROR")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã


async def main(page: ft.Page):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    await loging(page)


    create_database()  # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    page.title = f"{PROGRAM_NAME}: {PROGRAM_VERSION} (–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {DATE_OF_PROGRAM_CHANGE})"
    page.window.width = WINDOW_WIDTH  # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞
    page.window.height = WINDOW_HEIGHT  # –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞
    page.window.resizable = WINDOW_RESIZABLE  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞

    async def route_change(_):
        page.views.clear()
        # ______________________________________________________________________________________________________________
        await main_menu_program(page=page)  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã
        # ______________________________________________________________________________________________________________
        # try:
        if page.route == "/inviting":  # –ú–µ–Ω—é "üöÄ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥"
            # TODO –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ Peewee. –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, username, —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω–≤–∞–π—Ç–∏–Ω–≥
            await InvitingToAGroup(page=page).inviting_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/account_verification_menu":  # "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"
            await TGChek(page=page).account_verification_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/subscribe_unsubscribe":  # –ú–µ–Ω—é "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞"
            await SubscribeUnsubscribeTelegram(page=page).subscribe_and_unsubscribe_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/working_with_reactions":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"
            await reactions_menu(page=page)
        elif page.route == "/setting_reactions":  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await WorkingWithReactions().send_reaction_request(page=page)
            logger.info("üîö –ö–æ–Ω–µ—Ü –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await end_time(start, page=page)
        elif page.route == "/automatic_setting_of_reactions":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await WorkingWithReactions().setting_reactions(page=page)
            logger.info("üîö –ö–æ–Ω–µ—Ü –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
            await end_time(start, page=page)
        # __________________________________________________________________________________________________________
        elif page.route == "/viewing_posts_menu":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –º–µ–Ω—é
            await viewing_posts_menu(page=page)
        elif page.route == "/we_are_winding_up_post_views":  # Ô∏è‚Äçüó®Ô∏è –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
            await ViewingPosts(page=page).viewing_posts_request()
            logger.info("üîö –ö–æ–Ω–µ—Ü –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
            await end_time(start, page=page)
        # __________________________________________________________________________________________________________
        elif page.route == "/parsing":  # –ú–µ–Ω—é "–ü–∞—Ä—Å–∏–Ω–≥"
            await ParsingGroupMembers(page=page).account_selection_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/importing_a_list_of_parsed_data":  # üìã –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            await ReceivingAndRecording().write_data_to_excel(file_name="user_data/parsed_chat_participants.xlsx")
        # __________________________________________________________________________________________________________
        elif page.route == "/working_with_contacts":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
            await working_with_contacts_menu(page=page)
        elif page.route == "/creating_contact_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            open_and_read_data(table_name="contact")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
            # TODO –º–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ PEEWEE
            await SettingPage(page=page).output_the_input_field(page=page, table_name="contact",
                                                                column_name="contact", route="/working_with_contacts",
                                                                into_columns="contact")
            logger.info("üîö –ö–æ–Ω–µ—Ü –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await end_time(start, page=page)
        elif page.route == "/show_list_contacts":  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).show_account_contact_list()
            logger.info("üîö –ö–æ–Ω–µ—Ü –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await end_time(start, page=page)
        elif page.route == "/deleting_contacts":  # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).delete_contact()
            logger.info("üîö –ö–æ–Ω–µ—Ü –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await end_time(start, page=page)
        elif page.route == "/adding_contacts":  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            start = await start_time(page=page)
            logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await TGContact(page=page).inviting_contact()
            logger.info("üîö –ö–æ–Ω–µ—Ü –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
            await end_time(start, page=page)
        # __________________________________________________________________________________________________________
        elif page.route == "/account_connection_menu":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–º–µ–Ω—é'.
            await TGConnect(page=page).account_connection_menu()
        # __________________________________________________________________________________________________________
        elif page.route == "/creating_groups":  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)
            await CreatingGroupsAndChats(page=page).creating_groups_and_chats()
        # __________________________________________________________________________________________________________
        elif page.route == "/sending_messages_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
            await CheckingProgram().check_before_sending_messages_via_chats(page=page)
            await SendTelegramMessages(page=page).sending_messages_files_via_chats()
        elif page.route == "/sending_files_to_personal_account_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É
            await SendTelegramMessages(page=page).send_files_to_personal_chats()
        # __________________________________________________________________________________________________________
        elif page.route == "/bio_editing":  # –ú–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO"
            await bio_editing_menu(page=page)
        elif page.route == "/edit_description":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            await AccountBIO().change_bio_profile_gui(page=page)
        elif page.route == "/name_change":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram
            await AccountBIO().change_name_profile_gui(page=page)
        elif page.route == "/change_surname":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
            await AccountBIO().change_last_name_profile_gui(page=page)
        elif page.route == "/edit_photo":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
            await AccountBIO().change_photo_profile_gui(page=page)
            await show_notification(page=page, message="üîö –§–æ—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        elif page.route == "/changing_username":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
            await AccountBIO().change_username_profile_gui(page=page)
        # __________________________________________________________________________________________________________
        elif page.route == "/settings":  # –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TelegramMaster"
            await settings_menu(page=page)
        elif page.route == "/recording_api_id_api_hash":  # –ó–∞–ø–∏—Å—å api_id, api_hash
            await SettingPage(page=page).writing_api_id_api_hash(page=page)
        elif page.route == "/message_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            await SettingPage(page=page).record_setting( "message_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
        elif page.route == "/creating_username_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username
            await SettingPage(page=page).output_the_input_field(page, "members",
                                                                "username, id, access_hash, first_name, last_name, "
                                                                "user_phone, online_at, photos_id, user_premium",
                                                                "/settings", "members (username)")
        elif page.route == "/forming_list_of_chats_channels":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ / –∫–∞–Ω–∞–ª–æ–≤
            await SettingPage(page=page).output_the_input_field(page, "writing_group_links", "writing_group_links",
                                                                "/settings", "writing_group_links")
        elif page.route == "/proxy_entry":  # –ó–∞–ø–∏—Å—å proxy
            await SettingPage(page=page).creating_the_main_window_for_proxy_data_entry()
        elif page.route == "/message_recording":  # –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
            await SettingPage(page=page).recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                                             get_unique_filename(
                                                                                 base_filename='user_data/message/message'))
        elif page.route == "/recording_reaction_link":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
            await SettingPage(page=page).recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π",
                                                                             'user_data/reactions/link_channel.json')
        elif page.route == "/choice_of_reactions":  # –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π
            await reaction_gui(page=page)
        elif page.route == "/recording_the_time_between_messages":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

            await SettingPage(page=page).create_main_window(variable="time_sending_messages",
                                                            time_range=[TIME_SENDING_MESSAGES_1,
                                                                        time_sending_messages_2])
        elif page.route == "/changing_accounts":  # –°–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            await SettingPage(page=page).create_main_window(variable="time_changing_accounts",
                                                            time_range=[time_changing_accounts_1,
                                                                        time_changing_accounts_2])

        page.update()

    def view_pop(_):
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.go(page.route)


if __name__ == '__main__':

    ft.app(target=main)
