# -*- coding: utf-8 -*-
import asyncio
import datetime

import flet as ft
from loguru import logger

from docs.app import start_app
from src.core.checking_program import CheckingProgram
from src.core.configs import (ConfigReader, program_name, program_version, date_of_program_change, window_width,
                              window_height, window_resizable)
from src.core.sqlite_working_tools import DatabaseHandler
from src.features.account.TGAccountBIO import AccountBIO
from src.features.account.TGChek import TGChek
from src.features.account.TGConnect import TGConnect
from src.features.account.TGContact import TGContact
from src.features.account.TGCreating import CreatingGroupsAndChats
from src.features.account.TGInviting import InvitingToAGroup
from src.features.account.TGParsing import ParsingGroupMembers
from src.features.account.TGReactions import WorkingWithReactions
from src.features.account.TGSendingMessages import SendTelegramMessages
from src.features.account.TGSubUnsub import SubscribeUnsubscribeTelegram
from src.features.account.TGViewingPosts import ViewingPosts
from src.features.auth.logging_in import loging
from src.features.recording.receiving_and_recording import ReceivingAndRecording
from src.features.settings.setting import SettingPage, get_unique_filename, reaction_gui
from src.gui.menu import (inviting_menu, bio_editing_menu, settings_menu, menu_parsing, reactions_menu,
                          subscribe_and_unsubscribe_menu, account_verification_menu, account_connection_menu,
                          connecting_accounts_by_number_menu, connecting_accounts_by_session_menu, viewing_posts_menu,
                          show_notification, creating_groups_and_chats_menu, working_with_contacts_menu,
                          main_menu_program)
from src.gui.sending_messages_menu import display_message_distribution_menu

logger.add("user_data/log/log.log", rotation="500 KB", compression="zip", level="INFO")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
logger.add("user_data/log/log_ERROR.log", rotation="500 KB", compression="zip", level="ERROR")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã


async def main(page: ft.Page):
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    page.title = f"{program_name}: {program_version} (–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {date_of_program_change})"
    page.window.width = window_width  # –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞
    page.window.height = window_height  # –í—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞
    page.window.resizable = window_resizable  # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    logger.info(f"Program version: {program_version}. Date of change: {date_of_program_change}")

    async def route_change(route):

        page.views.clear()
        # ______________________________________________________________________________________________________________
        await main_menu_program(page)  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã
        # ______________________________________________________________________________________________________________
        try:
            if page.route == "/inviting":  # –ú–µ–Ω—é "üöÄ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥"
                await inviting_menu(page)
            elif page.route == "/inviting_without_limits":  # üöÄ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥
                await CheckingProgram().check_before_inviting(page=page)
                await InvitingToAGroup().inviting_without_limits(page=page)
            elif page.route == "/inviting_1_time_per_hour":  # ‚è∞ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ 1 —Ä–∞–∑ –≤ —á–∞—Å
                await CheckingProgram().check_before_inviting(page=page)
                await InvitingToAGroup().launching_an_invite_once_an_hour(page=page)
            elif page.route == "/inviting_certain_time":  # üïí –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                await CheckingProgram().check_before_inviting(page=page)
                await InvitingToAGroup().schedule_invite(page=page)
            elif page.route == "/inviting_every_day":  # üìÖ –ò–Ω–≤–∞–π—Ç–∏–Ω–≥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
                await CheckingProgram().check_before_inviting(page=page)
                await InvitingToAGroup().launching_invite_every_day_certain_time(page=page)
            # ______________________________________________________________________________________________________________
            elif page.route == "/account_verification_menu":  # –ú–µ–Ω—é "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"
                await account_verification_menu(page)
            elif page.route == "/validation_check":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
                await TGChek().validation_check(page=page)
            elif page.route == "/checking_for_spam_bots":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Å–ø–∞–º –±–æ—Ç
                await TGChek().checking_for_spam_bots(page=page)
            elif page.route == "/renaming_accounts":  # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                await TGChek().renaming_accounts(page=page)
            elif page.route == "/full_verification":  # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                await TGChek().full_verification(page=page)
            # ______________________________________________________________________________________________________________
            elif page.route == "/subscribe_unsubscribe":  # –ú–µ–Ω—é "–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –æ—Ç–ø–∏—Å–∫–∞"
                await subscribe_and_unsubscribe_menu(page)
            elif page.route == "/subscription_all":  # –ü–æ–¥–ø–∏—Å–∫–∞
                await CheckingProgram().checking_for_subscription_account(page=page)
                await SubscribeUnsubscribeTelegram().subscribe_telegram(page=page)
            elif page.route == "/unsubscribe_all":  # –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è
                await CheckingProgram().checking_for_unsubscribe_all(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –û—Ç–ø–∏—Å–∫–∞")
                await SubscribeUnsubscribeTelegram().unsubscribe_all(page=page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –û—Ç–ø–∏—Å–∫–∏")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            # ______________________________________________________________________________________________________________
            elif page.route == "/working_with_reactions":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"
                await reactions_menu(page)
            elif page.route == "/setting_reactions":  # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏
                await CheckingProgram().checking_for_setting_reactions(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                await WorkingWithReactions().send_reaction_request(page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –ü—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            elif page.route == "/automatic_setting_of_reactions":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–π
                await CheckingProgram().checking_for_setting_reactions(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                await WorkingWithReactions().setting_reactions(page=page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            # ______________________________________________________________________________________________________________
            elif page.route == "/viewing_posts_menu":  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –º–µ–Ω—é
                await viewing_posts_menu(page)
            elif page.route == "/we_are_winding_up_post_views":  # Ô∏è‚Äçüó®Ô∏è –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
                await CheckingProgram().checking_for_viewing_posts_menu(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
                await ViewingPosts().viewing_posts_request(page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –ù–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            # ______________________________________________________________________________________________________________
            elif page.route == "/parsing":  # –ú–µ–Ω—é "–ü–∞—Ä—Å–∏–Ω–≥"
                await menu_parsing(page)
            elif page.route == "/parsing_single_groups":  # üîç –ü–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã / –≥—Ä—É–ø–ø
                await CheckingProgram().checking_for_parsing_single_groups(page=page)
                await ParsingGroupMembers().parse_groups(page)
            elif page.route == "/parsing_selected_group_user_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
                await CheckingProgram().checking_for_parsing_single_groups(page=page)
                await ParsingGroupMembers().choose_and_parse_group(page)
            elif page.route == "/parsing_active_group_members":  # –ü–∞—Ä—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
                await CheckingProgram().checking_for_parsing_single_groups(page=page)
                await ParsingGroupMembers().entering_data_for_parsing_active(page)
            elif page.route == "/parsing_groups_channels_account_subscribed":  # –ü–∞—Ä—Å–∏–Ω–≥ –≥—Ä—É–ø–ø / –∫–∞–Ω–∞–ª–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–∞
                await CheckingProgram().checking_for_parsing_single_groups(page=page)
                await ParsingGroupMembers().parse_subscribed_groups(page)
            elif page.route == "/clearing_list_previously_saved_data":  # –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                await DatabaseHandler().cleaning_db("members")
                await show_notification(page, "–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            elif page.route == "/importing_a_list_of_parsed_data":  # üìã –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞–Ω–µ–µ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                await ReceivingAndRecording().write_data_to_excel(file_name="user_data/parsed_chat_participants.xlsx")
            # ______________________________________________________________________________________________________________
            elif page.route == "/working_with_contacts":  # –ú–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏"
                await working_with_contacts_menu(page)
            elif page.route == "/creating_contact_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                await CheckingProgram().checking_creating_contact_list(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                await DatabaseHandler().open_and_read_data("contact")  # –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
                SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤", "contact",
                                                     "contact", "/working_with_contacts", "contact")
                logger.info("üîö –ö–æ–Ω–µ—Ü –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            elif page.route == "/show_list_contacts":  # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                await CheckingProgram().checking_creating_contact_list(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                await TGContact().show_account_contact_list(page=page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –ü–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            elif page.route == "/deleting_contacts":  # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                await CheckingProgram().checking_creating_contact_list(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                await TGContact().delete_contact(page=page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –£–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            elif page.route == "/adding_contacts":  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                await CheckingProgram().checking_creating_contact_list(page=page)
                start = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞: ' + str(start))
                logger.info("‚ñ∂Ô∏è –ù–∞—á–∞–ª–æ –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                await TGContact().inviting_contact(page=page)
                logger.info("üîö –ö–æ–Ω–µ—Ü –î–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤")
                finish = datetime.datetime.now()  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
                logger.info('–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: ' + str(finish))
                logger.info('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ' + str(finish - start))  # –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            # ______________________________________________________________________________________________________________
            elif page.route == "/account_connection_menu":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–º–µ–Ω—é'.
                await account_connection_menu(page)
            # _______________________________________________________________________________________________________________
            elif page.route == "/connecting_accounts_by_number":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ '–ú–µ–Ω—é'
                await connecting_accounts_by_number_menu(page)
            elif page.route == "/account_connection_number_answering_machine":  # –î–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞
                await TGConnect().connecting_number_accounts(page, 'answering_machine', '–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞')
            elif page.route == "/account_connection_number_bio":  # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO
                await TGConnect().connecting_number_accounts(page, 'bio', '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO')
            elif page.route == "/account_connection_number_contact":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏
                await TGConnect().connecting_number_accounts(page, 'contact', '—Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏')
            elif page.route == "/account_connection_number_creating":  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø
                await TGConnect().connecting_number_accounts(page, 'creating', '—Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø')
            elif page.route == "/account_connection_number_inviting":  # –î–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
                await TGConnect().connecting_number_accounts(page, 'inviting', '–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
            elif page.route == "/account_connection_number_parsing":  # –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
                await TGConnect().connecting_number_accounts(page, 'parsing', '–ø–∞—Ä—Å–∏–Ω–≥–∞')
            elif page.route == "/account_connection_number_reactions":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏
                await TGConnect().connecting_number_accounts(page, 'reactions', '—Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏')
            elif page.route == "/account_connection_number_reactions_list":  # –î–ª—è –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
                await TGConnect().connecting_number_accounts(page, 'reactions_list', '–ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π')
            elif page.route == "/account_connection_number_send_message":  # –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
                await TGConnect().connecting_number_accounts(page, 'send_message', '—Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π')
            elif page.route == "/account_connection_number_subscription":  # –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
                await TGConnect().connecting_number_accounts(page, 'subscription', '–ø–æ–¥–ø–∏—Å–∫–∏')
            elif page.route == "/account_connection_number_unsubscribe":  # –î–ª—è –æ—Ç–ø–∏—Å–∫–∏
                await TGConnect().connecting_number_accounts(page, 'unsubscribe', '–æ—Ç–ø–∏—Å–∫–∏')
            elif page.route == "/account_connection_number_viewing":  # –î–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
                await TGConnect().connecting_number_accounts(page, 'viewing', '–Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤')
            # _______________________________________________________________________________________________________________
            elif page.route == "/connecting_accounts_by_session":  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ session –∞–∫–∫–∞—É–Ω—Ç–æ–≤ '–ú–µ–Ω—é'
                await connecting_accounts_by_session_menu(page)
            elif page.route == "/account_connection_session_answering_machine":  # –î–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞ (session)
                await TGConnect().connecting_session_accounts(page, 'answering_machine', '–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞')
            elif page.route == "/account_connection_session_bio":  # –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO (session)
                await TGConnect().connecting_session_accounts(page, 'bio', '—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è BIO')
            elif page.route == "/account_connection_session_contact":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ (session)
                await TGConnect().connecting_session_accounts(page, 'contact', '—Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏')
            elif page.route == "/account_connection_session_creating":  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø (session)
                await TGConnect().connecting_session_accounts(page, 'creating', '—Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø')
            elif page.route == "/account_connection_session_inviting":  # –î–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞ (session)
                await TGConnect().connecting_session_accounts(page, 'inviting', '–∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞')
            elif page.route == "/account_connection_session_parsing":  # –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (session)
                await TGConnect().connecting_session_accounts(page, 'parsing', '–ø–∞—Ä—Å–∏–Ω–≥–∞')
            elif page.route == "/account_connection_session_reactions":  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ (session)
                await TGConnect().connecting_session_accounts(page, 'reactions', '—Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏')
            elif page.route == "/account_connection_session_reactions_list":  # –î–ª—è –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π (session)
                await TGConnect().connecting_session_accounts(page, 'reactions_list', '–ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π')
            elif page.route == "/account_connection_session_send_message":  # –î–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (session)
                await TGConnect().connecting_session_accounts(page, 'send_message', '—Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π')
            elif page.route == "/account_connection_session_subscription":  # –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (session)
                await TGConnect().connecting_session_accounts(page, 'subscription', '–ø–æ–¥–ø–∏—Å–∫–∏')
            elif page.route == "/account_connection_session_unsubscribe":  # –î–ª—è –æ—Ç–ø–∏—Å–∫–∏ (session)
                await TGConnect().connecting_session_accounts(page, 'unsubscribe', '–æ—Ç–ø–∏—Å–∫–∏')
            elif page.route == "/account_connection_session_viewing":  # –î–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (session)
                await TGConnect().connecting_session_accounts(page, 'viewing', '–Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤')
            # _______________________________________________________________________________________________________________
            elif page.route == "/creating_groups_and_chats_menu":  # –ú–µ–Ω—é "–°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø –∏ —á–∞—Ç–æ–≤"
                await creating_groups_and_chats_menu(page)
            elif page.route == "/creating_groups":  # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø (—á–∞—Ç–æ–≤)
                await CheckingProgram().checking_creating_groups(page=page)
                await CreatingGroupsAndChats().creating_groups_and_chats(page=page)
            # _______________________________________________________________________________________________________________
            elif page.route == "/sending_messages":  # –ú–µ–Ω—é "–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π"
                await display_message_distribution_menu(page)

            elif page.route == "/sending_messages_files_via_chats":  # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —á–∞—Ç–∞–º
                await CheckingProgram().check_before_sending_messages_via_chats(page=page)
                await SendTelegramMessages().sending_messages_files_via_chats(page=page)

            elif page.route == "/sending_files_to_personal_account_with_limits":  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–∫—É
                await CheckingProgram().checking_sending_to_personal(page=page)
                await SendTelegramMessages().send_files_to_personal_chats(page=page)

            # ______________________________________________________________________________________________________________
            elif page.route == "/bio_editing":  # –ú–µ–Ω—é "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ_BIO"
                await bio_editing_menu(page)
            elif page.route == "/edit_description":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
                await CheckingProgram().checking_for_bio(page=page)
                await AccountBIO().change_bio_profile_gui(page)
            elif page.route == "/name_change":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è Telegram
                await CheckingProgram().checking_for_bio(page=page)
                await AccountBIO().change_name_profile_gui(page)
            elif page.route == "/change_surname":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏
                await CheckingProgram().checking_for_bio(page=page)
                await AccountBIO().change_last_name_profile_gui(page)
            elif page.route == "/edit_photo":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ
                await CheckingProgram().checking_for_bio(page=page)
                await AccountBIO().change_photo_profile_gui(page)
                await show_notification(page, "üîö –§–æ—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–æ")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            elif page.route == "/changing_username":  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ username
                await CheckingProgram().checking_for_bio(page=page)
                await AccountBIO().change_username_profile_gui(page)
            # ______________________________________________________________________________________________________________
            elif page.route == "/settings":  # –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ TelegramMaster"
                await settings_menu(page)
            elif page.route == "/recording_api_id_api_hash":  # –ó–∞–ø–∏—Å—å api_id, api_hash
                await SettingPage().writing_api_id_api_hash(page)
            elif page.route == "/message_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await SettingPage().record_setting(page, "message_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
            elif page.route == "/account_limits":  # –õ–∏–º–∏—Ç—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
                await SettingPage().record_setting(page, "account_limits", "–í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
            elif page.route == "/creating_username_list":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username
                SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ username", "members",
                                                     "username, id, access_hash, first_name, last_name, "
                                                     "user_phone, online_at, photos_id, user_premium",
                                                     "/settings", "members (username)")
            elif page.route == "/forming_list_of_chats_channels":  # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ / –∫–∞–Ω–∞–ª–æ–≤
                SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≥—Ä—É–ø–ø—ã", "writing_group_links",
                                                     "writing_group_links", "/settings", "writing_group_links")
            elif page.route == "/link_entry":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞
                SettingPage().output_the_input_field(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–∞", "links_inviting",
                                                     "links_inviting", "/settings", "links_inviting")
            elif page.route == "/proxy_entry":  # –ó–∞–ø–∏—Å—å proxy
                await SettingPage().creating_the_main_window_for_proxy_data_entry(page)
            elif page.route == "/message_recording":  # –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π
                await SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è",
                                                                        get_unique_filename(
                                                                            base_filename='user_data/message/message'))
            elif page.route == "/recording_reaction_link":  # –ó–∞–ø–∏—Å—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π
                await SettingPage().recording_text_for_sending_messages(page, "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π",
                                                                        'user_data/reactions/link_channel.json')
            elif page.route == "/choice_of_reactions":  # –í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π
                await reaction_gui(page)
            elif page.route == "/recording_the_time_between_messages":  # –ó–∞–ø–∏—Å—å –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                time_sending_messages_1, time_sending_messages_2 = ConfigReader().get_time_inviting()  # –í—Ä–µ–º—è –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                time_sending_messages = [time_sending_messages_1, time_sending_messages_2]
                await SettingPage().create_main_window(page, variable="time_sending_messages",
                                                       time_range=time_sending_messages)
            elif page.route == "/time_between_invites_sending_messages":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–æ–º, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
                time_inviting_1, time_inviting_2 = ConfigReader().get_time_inviting()  # –í—Ä–µ–º—è –º–µ–∂–¥—É –∏–Ω–≤–∞–π—Ç–∏–Ω–≥–æ–º, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
                time_inviting = [time_inviting_1, time_inviting_2]
                await SettingPage().create_main_window(page, variable="time_inviting", time_range=time_inviting)
            elif page.route == "/changing_accounts":  # –°–º–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                time_changing_accounts_1, time_changing_accounts_2 = ConfigReader().get_config_time_changing_accounts()  # –í—Ä–µ–º—è —Å–º–µ–Ω—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                time_changing_accounts = [time_changing_accounts_1, time_changing_accounts_2]
                await SettingPage().create_main_window(page, variable="time_changing_accounts",
                                                       time_range=time_changing_accounts)
            elif page.route == "/time_between_subscriptions":
                await SettingPage().recording_the_time_to_launch_an_invite_every_day(page)
            elif page.route == "/time_between_subscriptionss":  # –í—Ä–µ–º—è –º–µ–∂–¥—É –ø–æ–¥–ø–∏—Å–∫–æ–π
                time_subscription_1, time_subscription_2 = ConfigReader().get_time_subscription()
                time_subscription = [time_subscription_1, time_subscription_2]
                await SettingPage().create_main_window(page, variable="time_subscription", time_range=time_subscription)
            elif page.route == "/clearing_generated_chat_list":  # üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
                await DatabaseHandler().cleaning_db("writing_group_links")
                await show_notification(page, "–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            elif page.route == "/documentation":  # –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
                start_app()
            elif page.route == "/errors":
                # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
                page.views.append(ft.View("/errors", []))

            page.update()
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    def view_pop(view):
        page.views.pop()
        top_view = page.views[-1]
        page.go(top_view.route)

    page.on_route_change = route_change
    page.on_view_pop = view_pop
    page.go(page.route)


async def main_run():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    await loging()


if __name__ == '__main__':

    try:
        asyncio.run(main_run())
    except Exception as error:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    ft.app(target=main)
