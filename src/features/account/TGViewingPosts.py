# -*- coding: utf-8 -*-
import asyncio  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–æ–¥–æ–º
import re  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏
import sys  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –≤—ã–∑–æ–≤–æ–º

import flet as ft  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É flet
from loguru import logger  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É loguru –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from telethon.tl.functions.messages import GetMessagesViewsRequest

from src.core.configs import path_accounts_folder, WIDTH_WIDE_BUTTON, BUTTON_HEIGHT
from src.core.utils import find_filess
from src.features.account.TGConnect import TGConnect
from src.features.account.parsing.gui_elements import GUIProgram
from src.features.account.subscribe_unsubscribe.subscribe_unsubscribe import SubscribeUnsubscribeTelegram
from src.gui.buttons import function_button_ready_viewing
from src.gui.gui import log_and_display
from src.locales.translations_loader import translations


class ViewingPosts:
    """
    –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤ –≤ Telegram.
    """

    def __init__(self, page):
        self.page = page
        self.tg_connect = TGConnect(page=page)
        self.sub_unsub_tg = SubscribeUnsubscribeTelegram(page=page)

    async def viewing_posts_menu(self):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏."""
        self.page.views.append(
            ft.View("/viewing_posts_menu",
                    [await GUIProgram().key_app_bar(),
                     ft.Text(spans=[ft.TextSpan(
                         translations["ru"]["reactions_menu"]["we_are_winding_up_post_views"],
                         ft.TextStyle(
                             size=20, weight=ft.FontWeight.BOLD,
                             foreground=ft.Paint(
                                 gradient=ft.PaintLinearGradient((0, 20), (150, 20), [ft.Colors.PINK,
                                                                                      ft.Colors.PURPLE])), ), ), ], ),
                     ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                         # üëÅÔ∏è‚Äçüó®Ô∏è –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ—Å—Ç–æ–≤
                         ft.ElevatedButton(width=WIDTH_WIDE_BUTTON, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["reactions_menu"]["we_are_winding_up_post_views"],
                                           on_click=lambda _: self.page.go("/we_are_winding_up_post_views")),
                     ])]))

    async def viewing_posts_request(self) -> None:
        """–û–∫–Ω–æ —Å –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤."""
        try:
            # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç
            link_channel = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª:", multiline=False, max_lines=1)
            link_post = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç:", multiline=False, max_lines=1)

            async def btn_click(_) -> None:

                for session_name in find_filess(directory_path=path_accounts_folder, extension='session'):
                    client = await self.tg_connect.get_telegram_client(self.page, session_name,
                                                                       account_directory=path_accounts_folder)
                    await log_and_display(f"[+] –†–∞–±–æ—Ç–∞–µ–º —Å –∫–∞–Ω–∞–ª–æ–º: {link_channel.value}", self.page)
                    await self.sub_unsub_tg.subscribe_to_group_or_channel(client, link_channel.value, self.page)
                    msg_id = int(re.search(r'/(\d+)$', link_post.value).group(1))  # –ü–æ–ª—É—á–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Å—Å—ã–ª–∫–∏
                    await self.viewing_posts(client, link_post.value, msg_id, link_channel.value, self.page)
                    await asyncio.sleep(1)
                    await client.disconnect()
                    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–π (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
                    self.page.go("/viewing_posts_menu")
                    self.page.update()  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

            def back_button_clicked(_) -> None:
                """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"""
                self.page.go("/viewing_posts_menu")

            function_button_ready_viewing(self.page, btn_click, back_button_clicked, link_channel, link_post)

        except Exception as error:
            logger.exception(error)

    async def viewing_posts(self, client, link_post, number, link_channel) -> None:
        """
        –ù–∞–∫—Ä—É—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–æ–≤

        :param client: –ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
        :param link_post: –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç
        :param number: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
        :param link_channel: –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
        :return: None
        """
        try:
            try:
                await self.sub_unsub_tg.subscribe_to_group_or_channel(client, link_channel, self.page)
                channel = await client.get_entity(link_channel)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–µ
                await asyncio.sleep(5)
                await log_and_display(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: {link_post}\n", self.page)
                await asyncio.sleep(5)
                await client(GetMessagesViewsRequest(peer=channel, id=[int(number)], increment=True))
            except KeyError:
                sys.exit(1)
        except Exception as error:
            logger.exception(error)
