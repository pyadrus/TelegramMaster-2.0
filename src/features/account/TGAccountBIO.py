# -*- coding: utf-8 -*-
import flet as ft  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É flet
from loguru import logger  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É loguru
from telethon import functions  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É telethon
from telethon.errors import (AuthKeyUnregisteredError, UsernamePurchaseAvailableError, UsernameOccupiedError,
                             UsernameInvalidError)

from src.core.configs import path_bio_folder
from src.core.utils import find_files, find_filess
from src.features.account.TGConnect import TGConnect
from src.gui.buttons import function_button_ready
from src.gui.menu import show_notification


class GUIManager:

    @classmethod
    async def create_profile_gui(cls, page: ft.Page, action, label: str) -> None:
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è Telegram.

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        :param action: –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
        :param label: –ü–æ–¥–ø–∏—Å—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è.
        """
        try:
            user_input = ft.TextField(label=label, multiline=True, max_lines=19)

            async def btn_click(e) -> None:
                await action(page, user_input.value)
                page.go("/bio_editing")  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
                page.update()

            def back_button_clicked(e) -> None:
                """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è."""
                page.go("/bio_editing")

            function_button_ready(page, btn_click, back_button_clicked, user_input)  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ç–æ–≤–æ"
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")


class AccountBIO:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram —á–µ—Ä–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Flet.
    """

    def __init__(self):
        self.directory_path = path_bio_folder
        self.extension = 'session'
        self.tg_connect = TGConnect()
        self.account_actions = AccountActions(self.directory_path, self.extension, self.tg_connect)
        self.gui_manager = GUIManager()

    async def change_photo_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Flet.

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        await self.account_actions.change_photo_profile(page)

    async def change_username_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        await self.gui_manager.create_profile_gui(page, self.account_actions.change_username_profile,
                                                  label="–í–≤–µ–¥–∏—Ç–µ username –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤):")

    async def change_bio_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet.

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        await self.gui_manager.create_profile_gui(page, self.account_actions.change_bio_profile,
                                                  label="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 70 —Å–∏–º–≤–æ–ª–æ–≤: ")

    async def change_name_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        await self.gui_manager.create_profile_gui(page, self.account_actions.change_name_profile,
                                                  label="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ")

    async def change_last_name_profile_gui(self, page: ft.Page) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ –ø—Ä–æ—Ñ–∏–ª—è Telegram –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ Flet

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        await self.gui_manager.create_profile_gui(page, self.account_actions.change_last_name_profile,
                                                  label="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–æ—Ñ–∏–ª—è, –Ω–µ –±–æ–ª–µ–µ 64 —Å–∏–º–≤–æ–ª–æ–≤: ")


class AccountActions:
    """
    –ö–ª–∞—Å—Å, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram.
    """

    def __init__(self, directory_path, extension, tg_connect):
        self.directory_path = directory_path  # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ Telegram
        self.extension = extension  # —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º Telegram (session)
        self.tg_connect = tg_connect  # –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ TelegramConnect (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É)

    async def change_bio_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è Telegram –∞–∫–∫–∞—É–Ω—Ç–∞.

        :param user_input - –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è Telegram
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        :return: None
        """

        try:
            logger.info(f"–ó–∞–ø—É—Å–∫ —Å–º–µ–Ω—ã  –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
            for session_name in await find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()

                if len(user_input) > 70:
                    await show_notification(page, f"‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 70 —Å–∏–º–≤–æ–ª–æ–≤ ({len(user_input)}).")
                    return
                try:
                    result = await client(functions.account.UpdateProfileRequest(about=user_input))
                    logger.info(f'{result}\n–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!')
                except AuthKeyUnregisteredError:
                    logger.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")
                finally:
                    await client.disconnect()

        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

        await show_notification(page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è üè†

    async def change_username_profile(self, page, user_input) -> None:
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ username –ø—Ä–æ—Ñ–∏–ª—è Telegram

        :param user_input  - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in await find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page,
                                                                   session_name=session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                try:
                    await client(functions.account.UpdateUsernameRequest(username=user_input))
                    await show_notification(page,
                                            f'–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞')  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                except AuthKeyUnregisteredError:
                    await show_notification(page, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                except (UsernamePurchaseAvailableError, UsernameOccupiedError):
                    await show_notification(page, "‚ùå –ù–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                except UsernameInvalidError:
                    await show_notification(page, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                finally:
                    await client.disconnect()
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_name_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è

        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """

        try:
            for session_name in await find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name=session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(first_name=user_input))
                    logger.info(f'{result}\n–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
                except AuthKeyUnregisteredError:
                    await show_notification(page, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                finally:
                    await client.disconnect()
                await show_notification(page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è üè†
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_last_name_profile(self, page, user_input):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è

        :param user_input - –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in await find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                await client.connect()
                try:
                    result = await client(functions.account.UpdateProfileRequest(last_name=user_input))
                    logger.info(f'{result}\n–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')

                except AuthKeyUnregisteredError:
                    await show_notification(page, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                finally:
                    await client.disconnect()
                await show_notification(page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

    async def change_photo_profile(self, page):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è.

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        try:
            for session_name in await find_filess(directory_path=self.directory_path, extension=self.extension):
                logger.info(f"{session_name}")
                client = await self.tg_connect.get_telegram_client(page, session_name,
                                                                   account_directory=self.directory_path)
                for photo_file in find_files(directory_path="user_data/bio", extension='jpg'):
                    try:
                        await client.connect()
                        await client(functions.photos.UploadProfilePhotoRequest(
                            file=await client.upload_file(f"user_data/bio/{photo_file[0]}.jpg")))
                    except AuthKeyUnregisteredError:
                        await show_notification(page,
                                                "‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    finally:
                        await client.disconnect()
        except Exception as error:
            logger.exception(f"‚ùå –û—à–∏–±–∫–∞: {error}")

        await show_notification(page, "–†–∞–±–æ—Ç–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")  # –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        page.go("/bio_editing")  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è üè†
