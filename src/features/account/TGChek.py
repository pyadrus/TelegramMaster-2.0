# -*- coding: utf-8 -*-
import flet as ft

from src.core.configs import BUTTON_WIDTH, BUTTON_HEIGHT
from src.features.account.TGConnect import TGConnect
from src.locales.translations_loader import translations


class TGChek:

    def __init__(self):
        self.TGConnect = TGConnect()

    async def account_verification_menu(self, page: ft.Page):
        """
        –ú–µ–Ω—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤

        :param page: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Flet –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
        """
        list_view = ft.ListView(expand=10, spacing=1, padding=2, auto_scroll=True)

        async def validation_check(_) -> None:
            """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
            await self.TGConnect.verify_all_accounts(page=page, list_view=list_view)

        async def renaming_accounts(_):
            """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
            await self.TGConnect.get_account_details(page=page, list_view=list_view)

        async def checking_for_spam_bots(_):
            """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ø–∞–º –±–æ—Ç–æ–≤"""
            await self.TGConnect.check_for_spam(page=page, list_view=list_view)

        async def full_verification(_):
            """–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
            await self.TGConnect.checking_all_accounts(page=page, list_view=list_view)

        page.views.append(
            ft.View("/account_verification_menu",
                    [ft.AppBar(title=ft.Text(translations["ru"]["menu"]["main"]),
                               bgcolor=ft.Colors.SURFACE_CONTAINER_HIGHEST),
                     ft.Text(spans=[ft.TextSpan(
                         translations["ru"]["menu"]["account_check"],
                         ft.TextStyle(
                             size=20,
                             weight=ft.FontWeight.BOLD,
                             foreground=ft.Paint(
                                 gradient=ft.PaintLinearGradient((0, 20), (150, 20), [ft.Colors.PINK,
                                                                                      ft.Colors.PURPLE])), ), ), ], ),
                     list_view,
                     ft.Column([  # –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (page) –≤ –≤–∏–¥–µ –∫–æ–ª–æ–Ω–æ–∫.
                         # ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —Å–ø–∞–º –±–æ—Ç
                         ft.ElevatedButton(width=BUTTON_WIDTH, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["account_verification"]["spam_check"],
                                           on_click=checking_for_spam_bots),
                         # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
                         ft.ElevatedButton(width=BUTTON_WIDTH, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["account_verification"]["validation"],
                                           on_click=validation_check),
                         # ‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                         ft.ElevatedButton(width=BUTTON_WIDTH, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["account_verification"]["renaming"],
                                           on_click=renaming_accounts),
                         # üîç –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
                         ft.ElevatedButton(width=BUTTON_WIDTH, height=BUTTON_HEIGHT,
                                           text=translations["ru"]["account_verification"]["full_verification"],
                                           on_click=full_verification),
                     ])]))
